#include <iostream>
#include <cmath>
#include <cstdlib>


//Вариант 7: 1 8 13 5 16(а)

/*Описать функцию RingS(R1, R2) вещественного типа, находящую площадь кольца, 
заключенного между двумя окружностями с общим центром и радиусами R1 и R2 
(R1 и R2 — вещественные, R1 > R2). С ее помощью найти площади трех колец, для 
которых даны внешние и внутренние радиусы. Воспользоваться формулой площади 
круга радиуса R: S = π·R2. В качестве значения π использовать 3.14.*/

const float PI = 3.14;
int A, B,C,D,F,i, g;
float A1, B1,y;
float RingS(float R1, float R2)
{
	return (R1 * PI) - (R2 * PI);
}

/* Описать процедуру TimeToHMS(T, H, M, S), определяющую по времени T (в
секундах) содержащееся в нем количество часов H, минут M и секунд S (T —
входной, H, M и S — выходные параметры целого типа). Используя эту процедуру,
найти количество часов, минут и секунд для пяти данных отрезков времени T1, T2,
. . ., T5.*/
int TimeToHMS(int T, int& H, int& M, int& S)
{
	H, M, S = 0;
	
	S = T % 60;
	T = T - S;
	T = T / 60;
	M = T % 60;
	T = T - M;
	H = T / 60;

	return 0;
}

/*Описать процедуру Minmax(X, Y), записывающую в переменную X минимальное из 
значений X и Y, а в переменную Y — максимальное из этих значений (X и Y —
вещественные параметры, являющиеся одновременно входными и выходными). 
Используя четыре вызова этой процедуры, найти минимальное и максимальное из 
данных чисел A, B, C, D.
*/
	/*#include <stdio.h>
#include <stdlib.h>
 
int Minmax (float *X,float *Y);
int main()
{
    int i;
    float X,Y,A,B,C,D;
    for(i=0;i<4;i++){
    printf("Enter A:");
    scanf("%f",&A);
    printf("Enter B:");
    scanf("%f",&B);
    printf("Enter C:");
    scanf("%f",&C);
    printf("Enter D:");
    scanf("%f",&D);
    Minmax(&X,&Y);
    printf("X=%g\nY=%g\n",&X,&Y);
}
    return 0;
}
    int Minmax (float *X,float *Y)
    {
    float max,min,A,B,C,D;
        if(A>B &&A>C && A>D)
        max=A;
        if(B>A && B>C && B>D)
        max=B;
        if(C>A && C>B && C>D)
        max=C;
        if(D>A && D>B && D>C)
        max=D;
        if(A<B && A<C && A<D)
        min=A;
        if(B<A && B<C && B<D)
        min=B;
        if(C<A && C<B && C<D)
        min=C;
        if(D<A && D<B && D<C)
        min=D;
        *X=min;
        *Y=max;
return 0;
     }*/



//Реализовать функцию ݕ)݂ = ݔ .(Протабулировать функцию.
/*
y = 2x - 10, если x > 0
y = 0, если x = 0
y = 2 * |x| - 1, если x < 0
*/
float Y(float X) 
{ 
    if (X > 0)  return(2 * X - 10);
    else
        if (X < 0) return((2 * (abs(X)) - 1));
        else
            return 0;
}


//здесь находится выполнение фукций в том же, что и выше порядке и разделены (//)
int main() 
{
	/*
	for (i = 0; i <= 3; i++)
	{
		std::cin >> A1 >> B1;
		if (RingS(A1,B1) > 0)
		{
			std::cout << RingS(A,B);
		}
		else
			std::cout << "Eror";
	}*/
	//

	/*
	int Tt[5];

	std::cin >> Tt[0] >> Tt[1] >> Tt[2] >> Tt[3] >> Tt[4];

	for (i = 0; i <= 4; i++)
	{
		
		TimeToHMS(Tt[i], B, C, D);
		std::cout << B << " " << C << " " << D << '\n';
	}*/
	//
    std::cin >> y;
    std::cout<< Y(y);


}



